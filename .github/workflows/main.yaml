name: Deploy Flask Application to Elastic Beanstalk

on:
  workflow_dispatch:  # This allows manual triggering

jobs:
  build:
    runs-on: ubuntu-latest
 
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
 
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
 
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
 
    - name: Build, tag, and push Docker image to ECR
      env:
        ECR_REGISTRY: 851725301615.dkr.ecr.ap-south-1.amazonaws.com
        ECR_REPOSITORY: engage_endurance
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
 
    - name: Register new task definition
      id: task-def
      uses: aws-actions/amazon-ecs-register-task-definition@v1
      with:
        family: your-task-family
        container-definitions: |
          [
            {
              "name": "your-container-name",
              "image": "851725301615.dkr.ecr.ap-south-1.amazonaws.com/engage_endurance:${{ github.sha }}",
              "essential": true,
              "memory": 512,
              "cpu": 256,
              "portMappings": [
                {
                  "containerPort": 80,
                  "hostPort": 80
                }
              ]
            }
          ]
 
    - name: Deploy to ECS
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        cluster: engage_endurance
        service: fatigue_service
        task-definition: ${{ steps.task-def.outputs.task-definition-arn }}
        wait-for-service-stability: true