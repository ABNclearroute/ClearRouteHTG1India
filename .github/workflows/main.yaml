name: Deploy Flask Application to Elastic Beanstalk

on:
  workflow_dispatch:  # This allows manual triggering

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.12.2'  # or your preferred Python version

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Zip application
      run: zip -r application.zip .

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Install Elastic Beanstalk CLI
      run: pip install awsebcli

    - name: Generate random EB application name
      id: random_app_name
      run: echo "::set-output name=name::engageendurance-$(date +%s)"

    - name: Generate random EB environment name
      id: random_env_name
      run: echo "::set-output name=name::engageenv-$(date +%s)"

    - name: Initialize Elastic Beanstalk application
      run: |
        eb init -p python-3.12 "${{ steps.random_app_name.outputs.name }}" --region ${{ secrets.AWS_REGION }}

    - name: Create Elastic Beanstalk environment
      run: |
        eb create "${{ steps.random_env_name.outputs.name }}" --cname "${{ steps.random_env_name.outputs.name }}" --instance-types t2.micro --platform python-3.12

    - name: Deploy to Elastic Beanstalk environment
      run: |
        eb deploy --label ${{ github.sha }} --quiet

    - name: Display Elastic Beanstalk environment URL
      run: |
        EB_URL=$(eb status | grep CNAME | awk '{print $2}')
        echo "Application deployed to: $EB_URL"
